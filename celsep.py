# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named celsepExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from celsepExt import *
except ImportError:
    pass

def getPluginID():
    return "CelSeparateColor"

def getLabel():
    return "celsep"

def getVersion():
    return 1

def getIconPath():
    return "celsep.png"

def getGrouping():
    return "Cel/Filter"

def getPluginDescription():
    return "This node separates certain color from input image."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createColorParam("KeyColorIDKEYparamValueVec40", "Key Color", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Color to seperate from image.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.3762621283531189, 0)
    param.setValue(0.3419144153594971, 1)
    param.setValue(0.2345506399869919, 2)
    param.setValue(1, 3)
    lastNode.KeyColorIDKEYparamValueVec40 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Apply_Mask"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Apply_Mask")
    lastNode.setLabel("Apply Mask")
    lastNode.setPosition(1138, 303)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupApply_Mask = lastNode

    param = lastNode.getParam("BChannelsR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsA")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Apply_Mask"

    # Start of node "InvertAlpha2"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("InvertAlpha2")
    lastNode.setLabel("InvertAlpha2")
    lastNode.setPosition(943, 314)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvertAlpha2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "InvertAlpha2"

    # Start of node "InvertAlpha1"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("InvertAlpha1")
    lastNode.setLabel("InvertAlpha1")
    lastNode.setPosition(946, 192)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvertAlpha1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "InvertAlpha1"

    # Start of node "KeyColor"
    lastNode = app.createNode("natron.community.plugins.IDKeyer", 1, group)
    lastNode.setScriptName("KeyColor")
    lastNode.setLabel("KeyColor")
    lastNode.setPosition(946, 47)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupKeyColor = lastNode

    param = lastNode.getParam("forceCaching")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createColorParam("IDKEYparamValueVec40", "colA", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.3762621283531189, 0)
    param.setValue(0.3419144153594971, 1)
    param.setValue(0.2345506399869919, 2)
    param.setValue(1, 3)
    param.setEnabled(False, 0)
    param.setEnabled(False, 1)
    param.setEnabled(False, 2)
    param.setEnabled(False, 3)
    lastNode.IDKEYparamValueVec40 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec41", "colB", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec41 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec42", "colC", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec42 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec43", "colD", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec43 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec44", "colE", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec44 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec45", "colF", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec45 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec46", "colG", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec46 = param
    del param

    param = lastNode.createSeparatorParam("sep", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep = param
    del param

    param = lastNode.createDoubleParam("tol", "Tolerance")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0.2, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("The tolerance factor for the key to work,\nIf the ID pass is in 8bit then value of 0.01 or 0.02 can help to match the color better...")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.tol = param
    del param

    param = lastNode.createSeparatorParam("sepb", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepb = param
    del param

    param = lastNode.createBooleanParam("alphaout", "Mask in RGBA")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Output the mask in all channel instead of alpha only")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.alphaout = param
    del param

    param = lastNode.createBooleanParam("cumulate", "Add Input  Alpha to the mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Add input alpha to the mask")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.cumulate = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "KeyColor"

    groupgroup = groupKeyColor
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("forceCaching")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createColorParam("IDKEYparamValueVec40", "colA", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.3762621283531189, 0)
    param.setValue(0.3419144153594971, 1)
    param.setValue(0.2345506399869919, 2)
    param.setValue(1, 3)
    param.setEnabled(False, 0)
    param.setEnabled(False, 1)
    param.setEnabled(False, 2)
    param.setEnabled(False, 3)
    lastNode.IDKEYparamValueVec40 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec41", "colB", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec41 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec42", "colC", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec42 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec43", "colD", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec43 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec44", "colE", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec44 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec45", "colF", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec45 = param
    del param

    param = lastNode.createColorParam("IDKEYparamValueVec46", "colG", True)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.IDKEYparamValueVec46 = param
    del param

    param = lastNode.createSeparatorParam("sep", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep = param
    del param

    param = lastNode.createDoubleParam("tol", "Tolerance")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(0.2, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("The tolerance factor for the key to work,\nIf the ID pass is in 8bit then value of 0.01 or 0.02 can help to match the color better...")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.tol = param
    del param

    param = lastNode.createSeparatorParam("sepb", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepb = param
    del param

    param = lastNode.createBooleanParam("alphaout", "Mask in RGBA")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Output the mask in all channel instead of alpha only")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.alphaout = param
    del param

    param = lastNode.createBooleanParam("cumulate", "Add Input  Alpha to the mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Add input alpha to the mask")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.cumulate = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "IDKEY"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, groupgroup)
    lastNode.setScriptName("IDKEY")
    lastNode.setLabel("IDKEY")
    lastNode.setPosition(1760, 1578)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupIDKEY = lastNode

    param = lastNode.getParam("mousePosition")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueVec30")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(0.068035848, 2)
        del param

    param = lastNode.getParam("paramValueVec40")
    if param is not None:
        param.setValue(0.3762621283531189, 0)
        param.setValue(0.3419144153594971, 1)
        param.setValue(0.2345506399869919, 2)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("paramValueVec41")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("paramValueVec42")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("paramValueVec43")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("paramValueVec44")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("paramValueVec45")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("paramValueVec46")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("imageShaderPresetDir")
    if param is not None:
        param.setValue("")
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("uniform\tvec4 colA=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colB=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colC=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colD=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colE=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colF=vec4(0.0,0.0,0.0,0.0);\nuniform\tvec4 colG=vec4(0.0,0.0,0.0,0.0);\n\nbool check(in vec3 src, in vec3 tgt)\n  {\n  int chk = 0;\n  bool ret = false ;\n  if (src.r <= tgt.r+iMouse.x){\n    if (src.r >= tgt.r-iMouse.x){\n      chk += 1;};};\n  if (src.g <= tgt.g+iMouse.x){\n    if (src.g >= tgt.g-iMouse.x){\n      chk += 1;};};\n  if (src.b <= tgt.b+iMouse.x){\n    if (src.b >= tgt.b-iMouse.x){\n      chk += 1;};};\n  if (chk == 3){ret=true;};\n  return ret ;\n  }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float A = 0.0;\n  vec3 col = texture2D(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n\nif (colA != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colA.rgb,col.rgb) == true){A=1.0;};};\n\nif (colB != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colB.rgb,col.rgb) == true){A=1.0;};};\n\nif (colC != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colC.rgb,col.rgb) == true){A=1.0;};};\n\nif (colD != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colD.rgb,col.rgb) == true){A=1.0;};};\n\nif (colE != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colE.rgb,col.rgb) == true){A=1.0;};};\n\nif (colF != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colF.rgb,col.rgb) == true){A=1.0;};};\n\nif (colG != vec4(0.0,0.0,0.0,0.0)){\n  if (check(colG.rgb,col.rgb) == true){A=1.0;};};\n    \n\n  fragColor = vec4(col.xyz,A);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(7, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("colA")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("colA")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("colB")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("colB")
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("colC")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("colC")
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("colD")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("colD")
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("colE")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("colE")
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("colF")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("colF")
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("colG")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("colG")
        del param

    del lastNode
    # End of node "IDKEY"

    # Start of node "ID_Pass"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("ID_Pass")
    lastNode.setLabel("ID_Pass")
    lastNode.setPosition(1487, 1578)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupID_Pass = lastNode

    del lastNode
    # End of node "ID_Pass"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(1747, 1992)
    lastNode.setSize(104, 31)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Shuffle"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, groupgroup)
    lastNode.setScriptName("Shuffle")
    lastNode.setLabel("Shuffle")
    lastNode.setPosition(1748, 1844)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupgroupShuffle = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shuffle"

    # Start of node "Cumulate_Alpha"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, groupgroup)
    lastNode.setScriptName("Cumulate_Alpha")
    lastNode.setLabel("Cumulate Alpha")
    lastNode.setPosition(1748, 1692)
    lastNode.setSize(104, 52)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupgroupCumulate_Alpha = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("screen")
        del param

    param = lastNode.getParam("AChannelsR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("AChannelsG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("AChannelsB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("BChannelsB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("OutputChannelsR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("OutputChannelsG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("OutputChannelsB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("aChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(screen)</Natron>")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Cumulate_Alpha"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, groupgroup)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(1532, 1713)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupIDKEY.connectInput(0, groupgroupID_Pass)
    groupgroupOutput1.connectInput(0, groupgroupShuffle)
    groupgroupShuffle.connectInput(1, groupgroupCumulate_Alpha)
    groupgroupCumulate_Alpha.connectInput(0, groupgroupIDKEY)
    groupgroupCumulate_Alpha.connectInput(1, groupgroupDot1)
    groupgroupDot1.connectInput(0, groupgroupID_Pass)

    param = groupgroupIDKEY.getParam("mousePosition")
    param.setExpression("thisGroup.tol.get()", False, 0)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec40")
    groupgroup.getParam("IDKEYparamValueVec40").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec41")
    groupgroup.getParam("IDKEYparamValueVec41").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec42")
    groupgroup.getParam("IDKEYparamValueVec42").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec43")
    groupgroup.getParam("IDKEYparamValueVec43").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec44")
    groupgroup.getParam("IDKEYparamValueVec44").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec45")
    groupgroup.getParam("IDKEYparamValueVec45").setAsAlias(param)
    del param
    param = groupgroupIDKEY.getParam("paramValueVec46")
    groupgroup.getParam("IDKEYparamValueVec46").setAsAlias(param)
    del param
    param = groupgroupShuffle.getParam("disableNode")
    param.setExpression("1-thisGroup.alphaout.get()", False, 0)
    del param
    param = groupgroupCumulate_Alpha.getParam("disableNode")
    param.setExpression("1-thisGroup.cumulate.get()", False, 0)
    del param

    param = groupgroup.getParam("IDKEYparamValueVec40")
    group.getParam("KeyColorIDKEYparamValueVec40").setAsAlias(param)
    del param

    # Start of node "_Empty"
    lastNode = app.createNode("net.sf.openfx.Solid", 1, group)
    lastNode.setScriptName("_Empty")
    lastNode.setLabel("_Empty")
    lastNode.setPosition(1307, 94)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    group_Empty = lastNode

    param = lastNode.getParam("extent")
    if param is not None:
        param.set("project")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1230, 0)
        param.setValue(920, 1)
        del param

    del lastNode
    # End of node "_Empty"

    # Start of node "Input2"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Input2")
    lastNode.setLabel("KeyColor_ID_Pass")
    lastNode.setPosition(1295, -48)
    lastNode.setSize(104, 31)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupInput2 = lastNode

    del lastNode
    # End of node "Input2"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(1138, 413)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupApply_Mask.connectInput(0, group_Empty)
    groupApply_Mask.connectInput(1, groupKeyColor)
    groupApply_Mask.connectInput(2, groupInvertAlpha2)
    groupInvertAlpha2.connectInput(0, groupInvertAlpha1)
    groupInvertAlpha1.connectInput(0, groupKeyColor)
    groupKeyColor.connectInput(0, groupInput2)
    group_Empty.connectInput(0, groupInput2)
    groupOutput1.connectInput(0, groupApply_Mask)

    param = groupKeyColor.getParam("IDKEYparamValueVec40")
    group.getParam("KeyColorIDKEYparamValueVec40").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["celsepExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
